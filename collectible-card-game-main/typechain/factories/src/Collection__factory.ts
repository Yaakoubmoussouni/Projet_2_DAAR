/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Collection, CollectionInterface } from "../../src/Collection";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_cardCount",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accountsTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cardCount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600e553480156200001657600080fd5b5060405162003bc338038062003bc383398181016040528101906200003c91906200065a565b826040518060400160405280600b81526020017f506f6b656d6f6e436172640000000000000000000000000000000000000000008152506040518060400160405280600481526020017f504b4d4e000000000000000000000000000000000000000000000000000000008152508160009081620000ba919062000920565b508060019081620000cc919062000920565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001445760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013b919062000a18565b60405180910390fd5b62000155816200025160201b60201c565b5081600c908162000167919062000920565b5080600d81905550620002486040518060400160405280601481526020017f436f6c6c656374696f6e20637265617465643a20000000000000000000000000815250600c8054620001b8906200070f565b80601f0160208091040260200160405190810160405280929190818152602001828054620001e6906200070f565b8015620002375780601f106200020b5761010080835404028352916020019162000237565b820191906000526020600020905b8154815290600101906020018083116200021957829003601f168201915b50505050506200031760201b60201c565b50505062000af1565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620003b982826040516024016200033092919062000a87565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620003bd60201b60201c565b5050565b620003e381620003de620003e660201b62000c03176200040760201b60201c565b60201c565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6200041b60201b6200236a17819050919050565b6200042562000ac2565b565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000468826200043b565b9050919050565b6200047a816200045b565b81146200048657600080fd5b50565b6000815190506200049a816200046f565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004f582620004aa565b810181811067ffffffffffffffff82111715620005175762000516620004bb565b5b80604052505050565b60006200052c62000427565b90506200053a8282620004ea565b919050565b600067ffffffffffffffff8211156200055d576200055c620004bb565b5b6200056882620004aa565b9050602081019050919050565b60005b838110156200059557808201518184015260208101905062000578565b60008484015250505050565b6000620005b8620005b2846200053f565b62000520565b905082815260208101848484011115620005d757620005d6620004a5565b5b620005e484828562000575565b509392505050565b600082601f830112620006045762000603620004a0565b5b815162000616848260208601620005a1565b91505092915050565b6000819050919050565b62000634816200061f565b81146200064057600080fd5b50565b600081519050620006548162000629565b92915050565b60008060006060848603121562000676576200067562000431565b5b6000620006868682870162000489565b935050602084015167ffffffffffffffff811115620006aa57620006a962000436565b5b620006b886828701620005ec565b9250506040620006cb8682870162000643565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072857607f821691505b6020821081036200073e576200073d620006e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000769565b620007b4868362000769565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000801620007fb620007f584620007cc565b620007d6565b620007cc565b9050919050565b6000819050919050565b6200081d83620007e0565b620008356200082c8262000808565b84845462000776565b825550505050565b600090565b6200084c6200083d565b6200085981848462000812565b505050565b5b8181101562000881576200087560008262000842565b6001810190506200085f565b5050565b601f821115620008d0576200089a8162000744565b620008a58462000759565b81016020851015620008b5578190505b620008cd620008c48562000759565b8301826200085e565b50505b505050565b600082821c905092915050565b6000620008f560001984600802620008d5565b1980831691505092915050565b6000620009108383620008e2565b9150826002028217905092915050565b6200092b82620006d5565b67ffffffffffffffff811115620009475762000946620004bb565b5b6200095382546200070f565b6200096082828562000885565b600060209050601f83116001811462000998576000841562000983578287015190505b6200098f858262000902565b865550620009ff565b601f198416620009a88662000744565b60005b82811015620009d257848901518255600182019150602085019450602081019050620009ab565b86831015620009f25784890151620009ee601f891682620008e2565b8355505b6001600288020188555050505b505050505050565b62000a12816200045b565b82525050565b600060208201905062000a2f600083018462000a07565b92915050565b600082825260208201905092915050565b600062000a5382620006d5565b62000a5f818562000a35565b935062000a7181856020860162000575565b62000a7c81620004aa565b840191505092915050565b6000604082019050818103600083015262000aa3818562000a46565b9050818103602083015262000ab9818462000a46565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b6130c28062000b016000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063c87b56dd1161007c578063c87b56dd1461039e578063dd4f8271146103ce578063e5326ab1146103fe578063e985e9c51461041c578063eacabe141461044c578063f2fde38b1461047c5761014d565b806370a08231146102f0578063715018a6146103205780638da5cb5b1461032a57806395d89b4114610348578063a22cb46514610366578063b88d4fde146103825761014d565b80631b6cde10116101155780631b6cde101461020a57806323b872dd146102285780632f745c591461024457806342842e0e146102745780634f6ccce7146102905780636352211e146102c05761014d565b806301ffc9a71461015257806306fdde0314610182578063081812fc146101a0578063095ea7b3146101d057806318160ddd146101ec575b600080fd5b61016c600480360381019061016791906123e0565b610498565b6040516101799190612428565b60405180910390f35b61018a6104aa565b60405161019791906124d3565b60405180910390f35b6101ba60048036038101906101b5919061252b565b61053c565b6040516101c79190612599565b60405180910390f35b6101ea60048036038101906101e591906125e0565b610558565b005b6101f461056e565b604051610201919061262f565b60405180910390f35b61021261057b565b60405161021f9190612663565b60405180910390f35b610242600480360381019061023d919061267e565b610581565b005b61025e600480360381019061025991906125e0565b610683565b60405161026b919061262f565b60405180910390f35b61028e6004803603810190610289919061267e565b61072c565b005b6102aa60048036038101906102a5919061252b565b61074c565b6040516102b7919061262f565b60405180910390f35b6102da60048036038101906102d5919061252b565b6107c2565b6040516102e79190612599565b60405180910390f35b61030a600480360381019061030591906126d1565b6107d4565b604051610317919061262f565b60405180910390f35b61032861088e565b005b6103326108a2565b60405161033f9190612599565b60405180910390f35b6103506108cc565b60405161035d91906124d3565b60405180910390f35b610380600480360381019061037b919061272a565b61095e565b005b61039c6004803603810190610397919061289f565b610974565b005b6103b860048036038101906103b3919061252b565b610991565b6040516103c591906124d3565b60405180910390f35b6103e860048036038101906103e391906125e0565b6109a3565b6040516103f5919061262f565b60405180910390f35b6104066109d4565b60405161041391906124d3565b60405180910390f35b61043660048036038101906104319190612922565b610a62565b6040516104439190612428565b60405180910390f35b61046660048036038101906104619190612a03565b610af6565b604051610473919061262f565b60405180910390f35b610496600480360381019061049191906126d1565b610b7d565b005b60006104a382610c24565b9050919050565b6060600080546104b990612a8e565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590612a8e565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050505050905090565b600061054782610c9e565b5061055182610d26565b9050919050565b61056a8282610565610d63565b610d6b565b5050565b6000600980549050905090565b600d5481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f35760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105ea9190612599565b60405180910390fd5b60006106078383610602610d63565b610d7d565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461067d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161067493929190612abf565b60405180910390fd5b50505050565b600061068e836107d4565b82106106d35782826040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526004016106ca929190612af6565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b61074783838360405180602001604052806000815250610974565b505050565b600061075661056e565b821061079c576000826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610793929190612af6565b60405180910390fd5b600982815481106107b0576107af612b1f565b5b90600052602060002001549050919050565b60006107cd82610c9e565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108475760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161083e9190612599565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610896610d93565b6108a06000610e1a565b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108db90612a8e565b80601f016020809104026020016040519081016040528092919081815260200182805461090790612a8e565b80156109545780601f1061092957610100808354040283529160200191610954565b820191906000526020600020905b81548152906001019060200180831161093757829003601f168201915b5050505050905090565b610970610969610d63565b8383610ee0565b5050565b61097f848484610581565b61098b8484848461104f565b50505050565b606061099c82611206565b9050919050565b600f60205281600052604060002081815481106109bf57600080fd5b90600052602060002001600091509150505481565b600c80546109e190612a8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0d90612a8e565b8015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610b00610d93565b600e6000815480929190610b1390612b7d565b91905055506000600e549050610b298482611319565b610b338184611412565b610b736040518060400160405280600881526020017f4d696e7465643a20000000000000000000000000000000000000000000000000815250848361146e565b8091505092915050565b610b85610d93565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bf75760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bee9190612599565b60405180910390fd5b610c0081610e1a565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c975750610c968261150d565b5b9050919050565b600080610caa8361156e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1d57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d14919061262f565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610d7883838360016115ab565b505050565b6000610d8a848484611770565b90509392505050565b610d9b610d63565b73ffffffffffffffffffffffffffffffffffffffff16610db96108a2565b73ffffffffffffffffffffffffffffffffffffffff1614610e1857610ddc610d63565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e0f9190612599565b60405180910390fd5b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5157816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f489190612599565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110429190612428565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611200578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611093610d63565b8685856040518563ffffffff1660e01b81526004016110b59493929190612c1a565b6020604051808303816000875af19250505080156110f157506040513d601f19601f820116820180604052508101906110ee9190612c7b565b60015b611175573d8060008114611121576040519150601f19603f3d011682016040523d82523d6000602084013e611126565b606091505b50600081510361116d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111649190612599565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111fe57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111f59190612599565b60405180910390fd5b505b50505050565b606061121182610c9e565b50600060066000848152602001908152602001600020805461123290612a8e565b80601f016020809104026020016040519081016040528092919081815260200182805461125e90612a8e565b80156112ab5780601f10611280576101008083540402835291602001916112ab565b820191906000526020600020905b81548152906001019060200180831161128e57829003601f168201915b5050505050905060006112bc61188d565b905060008151036112d1578192505050611314565b6000825111156113065780826040516020016112ee929190612ce4565b60405160208183030381529060405292505050611314565b61130f846118ca565b925050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361138b5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113829190612599565b60405180910390fd5b600061139983836000610d7d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461140d5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016114049190612599565b60405180910390fd5b505050565b806006600084815260200190815260200160002090816114329190612eb4565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051611462919061262f565b60405180910390a15050565b61150883838360405160240161148693929190612f86565b6040516020818303038152906040527f5821efa1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611933565b505050565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061156757506115668261194d565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115e45750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156117185760006115f484610c9e565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561165f57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561167257506116708184610a62565b155b156116b457826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116ab9190612599565b60405180910390fd5b811561171657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60008061177e858585611a2f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117c2576117bd84611c49565b611801565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611800576117ff8185611c92565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036118435761183e84611df3565b611882565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611881576118808585611ec4565b5b5b809150509392505050565b60606040518060400160405280601e81526020017f687474703a2f2f6c6f63616c686f73743a333030302f676574436172642f0000815250905090565b60606118d582610c9e565b5060006118e061188d565b90506000815111611900576040518060200160405280600081525061192b565b8061190a84611f4f565b60405160200161191b929190612ce4565b6040516020818303038152906040525b915050919050565b61194a81611942610c0361201d565b63ffffffff16565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611a1857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611a285750611a2782612028565b5b9050919050565b600080611a3b8461156e565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611a7d57611a7c818486612092565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b0e57611abf6000856000806115ab565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611b91576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000611c9d836107d4565b9050600060086000848152602001908152602001600020549050818114611d82576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816008600083815260200190815260200160002081905550505b6008600084815260200190815260200160002060009055600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600980549050611e079190612fcb565b90506000600a6000848152602001908152602001600020549050600060098381548110611e3757611e36612b1f565b5b906000526020600020015490508060098381548110611e5957611e58612b1f565b5b906000526020600020018190555081600a600083815260200190815260200160002081905550600a6000858152602001908152602001600020600090556009805480611ea857611ea7612fff565b5b6001900381819060005260206000200160009055905550505050565b60006001611ed1846107d4565b611edb9190612fcb565b905081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806008600084815260200190815260200160002081905550505050565b606060006001611f5e84612156565b01905060008167ffffffffffffffff811115611f7d57611f7c612774565b5b6040519080825280601f01601f191660200182016040528015611faf5781602001600182028036833780820191505090505b509050600082602001820190505b600115612012578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816120065761200561302e565b5b04945060008503611fbd575b819350505050919050565b61236a819050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61209d8383836122a9565b61215157600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361211257806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612109919061262f565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612148929190612af6565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106121b4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816121aa576121a961302e565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106121f1576d04ee2d6d415b85acef810000000083816121e7576121e661302e565b5b0492506020810190505b662386f26fc10000831061222057662386f26fc1000083816122165761221561302e565b5b0492506010810190505b6305f5e1008310612249576305f5e100838161223f5761223e61302e565b5b0492506008810190505b612710831061226e5761271083816122645761226361302e565b5b0492506004810190505b6064831061229157606483816122875761228661302e565b5b0492506002810190505b600a83106122a0576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561236157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061232257506123218484610a62565b5b8061236057508273ffffffffffffffffffffffffffffffffffffffff1661234883610d26565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b61237261305d565b565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123bd81612388565b81146123c857600080fd5b50565b6000813590506123da816123b4565b92915050565b6000602082840312156123f6576123f561237e565b5b6000612404848285016123cb565b91505092915050565b60008115159050919050565b6124228161240d565b82525050565b600060208201905061243d6000830184612419565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561247d578082015181840152602081019050612462565b60008484015250505050565b6000601f19601f8301169050919050565b60006124a582612443565b6124af818561244e565b93506124bf81856020860161245f565b6124c881612489565b840191505092915050565b600060208201905081810360008301526124ed818461249a565b905092915050565b6000819050919050565b612508816124f5565b811461251357600080fd5b50565b600081359050612525816124ff565b92915050565b6000602082840312156125415761254061237e565b5b600061254f84828501612516565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061258382612558565b9050919050565b61259381612578565b82525050565b60006020820190506125ae600083018461258a565b92915050565b6125bd81612578565b81146125c857600080fd5b50565b6000813590506125da816125b4565b92915050565b600080604083850312156125f7576125f661237e565b5b6000612605858286016125cb565b925050602061261685828601612516565b9150509250929050565b612629816124f5565b82525050565b60006020820190506126446000830184612620565b92915050565b6000819050919050565b61265d8161264a565b82525050565b60006020820190506126786000830184612654565b92915050565b6000806000606084860312156126975761269661237e565b5b60006126a5868287016125cb565b93505060206126b6868287016125cb565b92505060406126c786828701612516565b9150509250925092565b6000602082840312156126e7576126e661237e565b5b60006126f5848285016125cb565b91505092915050565b6127078161240d565b811461271257600080fd5b50565b600081359050612724816126fe565b92915050565b600080604083850312156127415761274061237e565b5b600061274f858286016125cb565b925050602061276085828601612715565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6127ac82612489565b810181811067ffffffffffffffff821117156127cb576127ca612774565b5b80604052505050565b60006127de612374565b90506127ea82826127a3565b919050565b600067ffffffffffffffff82111561280a57612809612774565b5b61281382612489565b9050602081019050919050565b82818337600083830152505050565b600061284261283d846127ef565b6127d4565b90508281526020810184848401111561285e5761285d61276f565b5b612869848285612820565b509392505050565b600082601f8301126128865761288561276a565b5b813561289684826020860161282f565b91505092915050565b600080600080608085870312156128b9576128b861237e565b5b60006128c7878288016125cb565b94505060206128d8878288016125cb565b93505060406128e987828801612516565b925050606085013567ffffffffffffffff81111561290a57612909612383565b5b61291687828801612871565b91505092959194509250565b600080604083850312156129395761293861237e565b5b6000612947858286016125cb565b9250506020612958858286016125cb565b9150509250929050565b600067ffffffffffffffff82111561297d5761297c612774565b5b61298682612489565b9050602081019050919050565b60006129a66129a184612962565b6127d4565b9050828152602081018484840111156129c2576129c161276f565b5b6129cd848285612820565b509392505050565b600082601f8301126129ea576129e961276a565b5b81356129fa848260208601612993565b91505092915050565b60008060408385031215612a1a57612a1961237e565b5b6000612a28858286016125cb565b925050602083013567ffffffffffffffff811115612a4957612a48612383565b5b612a55858286016129d5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612aa657607f821691505b602082108103612ab957612ab8612a5f565b5b50919050565b6000606082019050612ad4600083018661258a565b612ae16020830185612620565b612aee604083018461258a565b949350505050565b6000604082019050612b0b600083018561258a565b612b186020830184612620565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b88826124f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612bba57612bb9612b4e565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000612bec82612bc5565b612bf68185612bd0565b9350612c0681856020860161245f565b612c0f81612489565b840191505092915050565b6000608082019050612c2f600083018761258a565b612c3c602083018661258a565b612c496040830185612620565b8181036060830152612c5b8184612be1565b905095945050505050565b600081519050612c75816123b4565b92915050565b600060208284031215612c9157612c9061237e565b5b6000612c9f84828501612c66565b91505092915050565b600081905092915050565b6000612cbe82612443565b612cc88185612ca8565b9350612cd881856020860161245f565b80840191505092915050565b6000612cf08285612cb3565b9150612cfc8284612cb3565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612d6a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612d2d565b612d748683612d2d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612db1612dac612da7846124f5565b612d8c565b6124f5565b9050919050565b6000819050919050565b612dcb83612d96565b612ddf612dd782612db8565b848454612d3a565b825550505050565b600090565b612df4612de7565b612dff818484612dc2565b505050565b5b81811015612e2357612e18600082612dec565b600181019050612e05565b5050565b601f821115612e6857612e3981612d08565b612e4284612d1d565b81016020851015612e51578190505b612e65612e5d85612d1d565b830182612e04565b50505b505050565b600082821c905092915050565b6000612e8b60001984600802612e6d565b1980831691505092915050565b6000612ea48383612e7a565b9150826002028217905092915050565b612ebd82612443565b67ffffffffffffffff811115612ed657612ed5612774565b5b612ee08254612a8e565b612eeb828285612e27565b600060209050601f831160018114612f1e5760008415612f0c578287015190505b612f168582612e98565b865550612f7e565b601f198416612f2c86612d08565b60005b82811015612f5457848901518255600182019150602085019450602081019050612f2f565b86831015612f715784890151612f6d601f891682612e7a565b8355505b6001600288020188555050505b505050505050565b60006060820190508181036000830152612fa0818661249a565b90508181036020830152612fb4818561249a565b9050612fc36040830184612620565b949350505050565b6000612fd6826124f5565b9150612fe1836124f5565b9250828203905081811115612ff957612ff8612b4e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea26469706673582212200f2c24b57cc14c8572f0e3c053ec04d6cba81353c558a8f81bac8ebc3fb4483764736f6c63430008140033";

type CollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collection__factory extends ContractFactory {
  constructor(...args: CollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _cardCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Collection> {
    return super.deploy(
      initialOwner,
      _name,
      _cardCount,
      overrides || {}
    ) as Promise<Collection>;
  }
  override getDeployTransaction(
    initialOwner: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _cardCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      _name,
      _cardCount,
      overrides || {}
    );
  }
  override attach(address: string): Collection {
    return super.attach(address) as Collection;
  }
  override connect(signer: Signer): Collection__factory {
    return super.connect(signer) as Collection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionInterface {
    return new utils.Interface(_abi) as CollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collection {
    return new Contract(address, _abi, signerOrProvider) as Collection;
  }
}
