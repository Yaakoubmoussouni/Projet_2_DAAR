/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CardRetail, CardRetailInterface } from "../../src/CardRetail";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "intialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingIndex",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingIndex",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct CardRetail.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct CardRetail.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200169838038062001698833981810160405281019062000037919062000236565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200028e565b60405180910390fd5b620000be816200010860201b60201c565b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ab565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fe82620001d1565b9050919050565b6200021081620001f1565b81146200021c57600080fd5b50565b600081519050620002308162000205565b92915050565b6000806040838503121562000250576200024f620001cc565b5b600062000260858286016200021f565b925050602062000273858286016200021f565b9150509250929050565b6200028881620001f1565b82525050565b6000602082019050620002a560008301846200027d565b92915050565b6113dd80620002bb6000396000f3fe6080604052600436106100915760003560e01c806394383f141161005957806394383f141461015c578063d56d229d14610185578063de74e57b146101b0578063f1b2d6a3146101f0578063f2fde38b1461021b57610091565b8063107a274a1461009657806351ed8288146100d3578063715018a6146100ef57806387ed92d7146101065780638da5cb5b14610131575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610cc0565b610244565b6040516100ca9190610dad565b60405180910390f35b6100ed60048036038101906100e89190610cc0565b61034c565b005b3480156100fb57600080fd5b5061010461059b565b005b34801561011257600080fd5b5061011b6105af565b6040516101289190610dd7565b60405180910390f35b34801561013d57600080fd5b506101466105bc565b6040516101539190610e01565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610e1c565b6105e5565b005b34801561019157600080fd5b5061019a6108f5565b6040516101a79190610ebb565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190610cc0565b61091b565b6040516101e79493929190610ee5565b60405180910390f35b3480156101fc57600080fd5b50610205610988565b604051610212919061102e565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d919061107c565b610a6c565b005b61024c610c45565b6002805490508210610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a90611106565b60405180910390fd5b600282815481106102a7576102a6611126565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b6002805490508110610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90611106565b60405180910390fd5b6000600282815481106103a9576103a8611126565b5b906000526020600020906004020190508060030160009054906101000a900460ff161561040b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610402906111a1565b60405180910390fd5b8060020154341015610452576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104499061120d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384600101546040518463ffffffff1660e01b81526004016104d99392919061122d565b600060405180830381600087803b1580156104f357600080fd5b505af1158015610507573d6000803e3d6000fd5b5050505060018160030160006101000a81548160ff0219169083151502179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f19350505050158015610596573d6000803e3d6000fd5b505050565b6105a3610af2565b6105ad6000610b79565b565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016106579190610dd7565b602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190611279565b73ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e5906112f2565b60405180910390fd5b60008103610731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107289061135e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b815260040161078e92919061137e565b600060405180830381600087803b1580156107a857600080fd5b505af11580156107bc573d6000803e3d6000fd5b50505050600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200160001515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050813373ffffffffffffffffffffffffffffffffffffffff167fbbf44e68296791df5535457da734bf1017c4b233a740af6d7a89b9f1af4ecb42836040516108e99190610dd7565b60405180910390a35050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061092b57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610a6357838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050815260200190600101906109ac565b50505050905090565b610a74610af2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ae65760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610add9190610e01565b60405180910390fd5b610aef81610b79565b50565b610afa610c3d565b73ffffffffffffffffffffffffffffffffffffffff16610b186105bc565b73ffffffffffffffffffffffffffffffffffffffff1614610b7757610b3b610c3d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b6e9190610e01565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b600080fd5b6000819050919050565b610c9d81610c8a565b8114610ca857600080fd5b50565b600081359050610cba81610c94565b92915050565b600060208284031215610cd657610cd5610c85565b5b6000610ce484828501610cab565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1882610ced565b9050919050565b610d2881610d0d565b82525050565b610d3781610c8a565b82525050565b60008115159050919050565b610d5281610d3d565b82525050565b608082016000820151610d6e6000850182610d1f565b506020820151610d816020850182610d2e565b506040820151610d946040850182610d2e565b506060820151610da76060850182610d49565b50505050565b6000608082019050610dc26000830184610d58565b92915050565b610dd181610c8a565b82525050565b6000602082019050610dec6000830184610dc8565b92915050565b610dfb81610d0d565b82525050565b6000602082019050610e166000830184610df2565b92915050565b60008060408385031215610e3357610e32610c85565b5b6000610e4185828601610cab565b9250506020610e5285828601610cab565b9150509250929050565b6000819050919050565b6000610e81610e7c610e7784610ced565b610e5c565b610ced565b9050919050565b6000610e9382610e66565b9050919050565b6000610ea582610e88565b9050919050565b610eb581610e9a565b82525050565b6000602082019050610ed06000830184610eac565b92915050565b610edf81610d3d565b82525050565b6000608082019050610efa6000830187610df2565b610f076020830186610dc8565b610f146040830185610dc8565b610f216060830184610ed6565b95945050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b608082016000820151610f6c6000850182610d1f565b506020820151610f7f6020850182610d2e565b506040820151610f926040850182610d2e565b506060820151610fa56060850182610d49565b50505050565b6000610fb78383610f56565b60808301905092915050565b6000602082019050919050565b6000610fdb82610f2a565b610fe58185610f35565b9350610ff083610f46565b8060005b838110156110215781516110088882610fab565b975061101383610fc3565b925050600181019050610ff4565b5085935050505092915050565b600060208201905081810360008301526110488184610fd0565b905092915050565b61105981610d0d565b811461106457600080fd5b50565b60008135905061107681611050565b92915050565b60006020828403121561109257611091610c85565b5b60006110a084828501611067565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964206c697374696e6720696e6465780000000000000000000000600082015250565b60006110f06015836110a9565b91506110fb826110ba565b602082019050919050565b6000602082019050818103600083015261111f816110e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e465420697320616c726561647920736f6c6400000000000000000000000000600082015250565b600061118b6013836110a9565b915061119682611155565b602082019050919050565b600060208201905081810360008301526111ba8161117e565b9050919050565b7f496e73756666696369656e742066756e647320746f2070757263686173650000600082015250565b60006111f7601e836110a9565b9150611202826111c1565b602082019050919050565b60006020820190508181036000830152611226816111ea565b9050919050565b60006060820190506112426000830186610df2565b61124f6020830185610df2565b61125c6040830184610dc8565b949350505050565b60008151905061127381611050565b92915050565b60006020828403121561128f5761128e610c85565b5b600061129d84828501611264565b91505092915050565b7f596f7520646f6e2774206f776e2074686973204e465400000000000000000000600082015250565b60006112dc6016836110a9565b91506112e7826112a6565b602082019050919050565b6000602082019050818103600083015261130b816112cf565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611348601c836110a9565b915061135382611312565b602082019050919050565b600060208201905081810360008301526113778161133b565b9050919050565b60006040820190506113936000830185610df2565b6113a06020830184610dc8565b939250505056fea2646970667358221220b403bdc740ef1aa8f8b5694bff655e9525e05408a2c35222e9bcbe5576c7b94764736f6c63430008140033";

type CardRetailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardRetailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CardRetail__factory extends ContractFactory {
  constructor(...args: CardRetailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftContractAddress: PromiseOrValue<string>,
    intialOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CardRetail> {
    return super.deploy(
      _nftContractAddress,
      intialOwner,
      overrides || {}
    ) as Promise<CardRetail>;
  }
  override getDeployTransaction(
    _nftContractAddress: PromiseOrValue<string>,
    intialOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftContractAddress,
      intialOwner,
      overrides || {}
    );
  }
  override attach(address: string): CardRetail {
    return super.attach(address) as CardRetail;
  }
  override connect(signer: Signer): CardRetail__factory {
    return super.connect(signer) as CardRetail__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardRetailInterface {
    return new utils.Interface(_abi) as CardRetailInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CardRetail {
    return new Contract(address, _abi, signerOrProvider) as CardRetail;
  }
}
