/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Card, CardInterface } from "../../src/Card";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initialBaseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "theOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getTokensForOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "cardID",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200394338038062003943833981810160405281019062000037919062000431565b806040518060400160405280600481526020017f43617264000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f41465300000000000000000000000000000000000000000000000000000000008152508160009081620000b59190620006e2565b508060019081620000c79190620006e2565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001369190620007da565b60405180910390fd5b62000150816200017360201b60201c565b506001600c8190555081600d90816200016a9190620006e2565b505050620007f7565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002a28262000257565b810181811067ffffffffffffffff82111715620002c457620002c362000268565b5b80604052505050565b6000620002d962000239565b9050620002e7828262000297565b919050565b600067ffffffffffffffff8211156200030a576200030962000268565b5b620003158262000257565b9050602081019050919050565b60005b838110156200034257808201518184015260208101905062000325565b60008484015250505050565b6000620003656200035f84620002ec565b620002cd565b90508281526020810184848401111562000384576200038362000252565b5b6200039184828562000322565b509392505050565b600082601f830112620003b157620003b06200024d565b5b8151620003c38482602086016200034e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003f982620003cc565b9050919050565b6200040b81620003ec565b81146200041757600080fd5b50565b6000815190506200042b8162000400565b92915050565b600080604083850312156200044b576200044a62000243565b5b600083015167ffffffffffffffff8111156200046c576200046b62000248565b5b6200047a8582860162000399565b92505060206200048d858286016200041a565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004ea57607f821691505b6020821081036200050057620004ff620004a2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200056a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200052b565b6200057686836200052b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005c3620005bd620005b7846200058e565b62000598565b6200058e565b9050919050565b6000819050919050565b620005df83620005a2565b620005f7620005ee82620005ca565b84845462000538565b825550505050565b600090565b6200060e620005ff565b6200061b818484620005d4565b505050565b5b8181101562000643576200063760008262000604565b60018101905062000621565b5050565b601f82111562000692576200065c8162000506565b62000667846200051b565b8101602085101562000677578190505b6200068f62000686856200051b565b83018262000620565b50505b505050565b600082821c905092915050565b6000620006b76000198460080262000697565b1980831691505092915050565b6000620006d28383620006a4565b9150826002028217905092915050565b620006ed8262000497565b67ffffffffffffffff81111562000709576200070862000268565b5b620007158254620004d1565b6200072282828562000647565b600060209050601f8311600181146200075a576000841562000745578287015190505b620007518582620006c4565b865550620007c1565b601f1984166200076a8662000506565b60005b8281101562000794578489015182556001820191506020850194506020810190506200076d565b86831015620007b45784890151620007b0601f891682620006a4565b8355505b6001600288020188555050505b505050505050565b620007d481620003ec565b82525050565b6000602082019050620007f16000830184620007c9565b92915050565b61313c80620008076000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb46514610389578063b88d4fde146103a5578063c87b56dd146103c1578063d0def521146103f1578063e985e9c514610421578063f2fde38b1461045157610142565b80636352211e146102e357806370a0823114610313578063715018a6146103435780638da5cb5b1461034d57806395d89b411461036b57610142565b806318160ddd1161010a57806318160ddd1461021157806323b872dd1461022f5780632f745c591461024b57806342842e0e1461027b5780634f6ccce71461029757806355f804b3146102c757610142565b806301ffc9a71461014757806306fdde03146101775780630725e89814610195578063081812fc146101c5578063095ea7b3146101f5575b600080fd5b610161600480360381019061015c9190612332565b61046d565b60405161016e919061237a565b60405180910390f35b61017f61047f565b60405161018c9190612425565b60405180910390f35b6101af60048036038101906101aa91906124a5565b610511565b6040516101bc919061259a565b60405180910390f35b6101df60048036038101906101da91906125e8565b6105bf565b6040516101ec9190612624565b60405180910390f35b61020f600480360381019061020a919061263f565b6105db565b005b6102196105f1565b604051610226919061268e565b60405180910390f35b610249600480360381019061024491906126a9565b6105fe565b005b6102656004803603810190610260919061263f565b610700565b604051610272919061268e565b60405180910390f35b610295600480360381019061029091906126a9565b6107a9565b005b6102b160048036038101906102ac91906125e8565b6107c9565b6040516102be919061268e565b60405180910390f35b6102e160048036038101906102dc9190612831565b61083f565b005b6102fd60048036038101906102f891906125e8565b61085a565b60405161030a9190612624565b60405180910390f35b61032d600480360381019061032891906124a5565b61086c565b60405161033a919061268e565b60405180910390f35b61034b610926565b005b61035561093a565b6040516103629190612624565b60405180910390f35b610373610964565b6040516103809190612425565b60405180910390f35b6103a3600480360381019061039e91906128a6565b6109f6565b005b6103bf60048036038101906103ba9190612987565b610a0c565b005b6103db60048036038101906103d691906125e8565b610a29565b6040516103e89190612425565b60405180910390f35b61040b60048036038101906104069190612a0a565b610a3b565b604051610418919061268e565b60405180910390f35b61043b60048036038101906104369190612a66565b610a9b565b604051610448919061237a565b60405180910390f35b61046b600480360381019061046691906124a5565b610b2f565b005b600061047882610bb5565b9050919050565b60606000805461048e90612ad5565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90612ad5565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b6060600061051e8361086c565b905060008167ffffffffffffffff81111561053c5761053b612706565b5b60405190808252806020026020018201604052801561056a5781602001602082028036833780820191505090505b50905060005b828110156105b4576105828582610700565b82828151811061059557610594612b06565b5b60200260200101818152505080806105ac90612b64565b915050610570565b508092505050919050565b60006105ca82610c16565b506105d482610c9e565b9050919050565b6105ed82826105e8610cdb565b610ce3565b5050565b6000600980549050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106705760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106679190612624565b60405180910390fd5b6000610684838361067f610cdb565b610cf5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fa578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106f193929190612bac565b60405180910390fd5b50505050565b600061070b8361086c565b82106107505782826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610747929190612be3565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6107c483838360405180602001604052806000815250610a0c565b505050565b60006107d36105f1565b8210610819576000826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610810929190612be3565b60405180910390fd5b6009828154811061082d5761082c612b06565b5b90600052602060002001549050919050565b610847610d0b565b80600d90816108569190612db8565b5050565b600061086582610c16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108df5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108d69190612624565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61092e610d0b565b6109386000610d92565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461097390612ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461099f90612ad5565b80156109ec5780601f106109c1576101008083540402835291602001916109ec565b820191906000526020600020905b8154815290600101906020018083116109cf57829003601f168201915b5050505050905090565b610a08610a01610cdb565b8383610e58565b5050565b610a178484846105fe565b610a2384848484610fc7565b50505050565b6060610a348261117e565b9050919050565b600080600c549050600c6000815480929190610a5690612b64565b9190505550610a658482611291565b610a9181600d85604051602001610a7d929190612f49565b6040516020818303038152906040526112af565b8091505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610b37610d0b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ba95760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ba09190612624565b60405180910390fd5b610bb281610d92565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c0f5750610c0e8261130b565b5b9050919050565b600080610c2283611385565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c9557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c8c919061268e565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610cf083838360016113c2565b505050565b6000610d02848484611587565b90509392505050565b610d13610cdb565b73ffffffffffffffffffffffffffffffffffffffff16610d3161093a565b73ffffffffffffffffffffffffffffffffffffffff1614610d9057610d54610cdb565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d879190612624565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ec957816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ec09190612624565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fba919061237a565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611178578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261100b610cdb565b8685856040518563ffffffff1660e01b815260040161102d9493929190612fc2565b6020604051808303816000875af192505050801561106957506040513d601f19601f820116820180604052508101906110669190613023565b60015b6110ed573d8060008114611099576040519150601f19603f3d011682016040523d82523d6000602084013e61109e565b606091505b5060008151036110e557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110dc9190612624565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461117657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161116d9190612624565b60405180910390fd5b505b50505050565b606061118982610c16565b506000600b600084815260200190815260200160002080546111aa90612ad5565b80601f01602080910402602001604051908101604052809291908181526020018280546111d690612ad5565b80156112235780601f106111f857610100808354040283529160200191611223565b820191906000526020600020905b81548152906001019060200180831161120657829003601f168201915b5050505050905060006112346116a4565b9050600081510361124957819250505061128c565b60008251111561127e578082604051602001611266929190613050565b6040516020818303038152906040529250505061128c565b61128784611736565b925050505b919050565b6112ab82826040518060200160405280600081525061179f565b5050565b80600b600084815260200190815260200160002090816112cf9190612db8565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516112ff919061268e565b60405180910390a15050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061137e575061137d826117bb565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113fb5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561152f57600061140b84610c16565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561147657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561148957506114878184610a9b565b155b156114cb57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114c29190612624565b60405180910390fd5b811561152d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60008061159585858561189d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115d9576115d484611ab7565b611618565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611617576116168185611b00565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361165a5761165584611c61565b611699565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611698576116978585611d32565b5b5b809150509392505050565b6060600d80546116b390612ad5565b80601f01602080910402602001604051908101604052809291908181526020018280546116df90612ad5565b801561172c5780601f106117015761010080835404028352916020019161172c565b820191906000526020600020905b81548152906001019060200180831161170f57829003601f168201915b5050505050905090565b606061174182610c16565b50600061174c6116a4565b9050600081511161176c5760405180602001604052806000815250611797565b8061177684611dbd565b604051602001611787929190613050565b6040516020818303038152906040525b915050919050565b6117a98383611e8b565b6117b66000848484610fc7565b505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061188657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611896575061189582611f84565b5b9050919050565b6000806118a984611385565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118eb576118ea818486611fee565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461197c5761192d6000856000806113c2565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146119ff576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000611b0b8361086c565b9050600060086000848152602001908152602001600020549050818114611bf0576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816008600083815260200190815260200160002081905550505b6008600084815260200190815260200160002060009055600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600980549050611c759190613074565b90506000600a6000848152602001908152602001600020549050600060098381548110611ca557611ca4612b06565b5b906000526020600020015490508060098381548110611cc757611cc6612b06565b5b906000526020600020018190555081600a600083815260200190815260200160002081905550600a6000858152602001908152602001600020600090556009805480611d1657611d156130a8565b5b6001900381819060005260206000200160009055905550505050565b60006001611d3f8461086c565b611d499190613074565b905081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806008600084815260200190815260200160002081905550505050565b606060006001611dcc846120b2565b01905060008167ffffffffffffffff811115611deb57611dea612706565b5b6040519080825280601f01601f191660200182016040528015611e1d5781602001600182028036833780820191505090505b509050600082602001820190505b600115611e80578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611e7457611e736130d7565b5b04945060008503611e2b575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611efd5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ef49190612624565b60405180910390fd5b6000611f0b83836000610cf5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f7f5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611f769190612624565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611ff9838383612205565b6120ad57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361206e57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612065919061268e565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016120a4929190612be3565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612110577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612106576121056130d7565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061214d576d04ee2d6d415b85acef81000000008381612143576121426130d7565b5b0492506020810190505b662386f26fc10000831061217c57662386f26fc100008381612172576121716130d7565b5b0492506010810190505b6305f5e10083106121a5576305f5e100838161219b5761219a6130d7565b5b0492506008810190505b61271083106121ca5761271083816121c0576121bf6130d7565b5b0492506004810190505b606483106121ed57606483816121e3576121e26130d7565b5b0492506002810190505b600a83106121fc576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156122bd57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061227e575061227d8484610a9b565b5b806122bc57508273ffffffffffffffffffffffffffffffffffffffff166122a483610c9e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61230f816122da565b811461231a57600080fd5b50565b60008135905061232c81612306565b92915050565b600060208284031215612348576123476122d0565b5b60006123568482850161231d565b91505092915050565b60008115159050919050565b6123748161235f565b82525050565b600060208201905061238f600083018461236b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123cf5780820151818401526020810190506123b4565b60008484015250505050565b6000601f19601f8301169050919050565b60006123f782612395565b61240181856123a0565b93506124118185602086016123b1565b61241a816123db565b840191505092915050565b6000602082019050818103600083015261243f81846123ec565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061247282612447565b9050919050565b61248281612467565b811461248d57600080fd5b50565b60008135905061249f81612479565b92915050565b6000602082840312156124bb576124ba6122d0565b5b60006124c984828501612490565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b612511816124fe565b82525050565b60006125238383612508565b60208301905092915050565b6000602082019050919050565b6000612547826124d2565b61255181856124dd565b935061255c836124ee565b8060005b8381101561258d5781516125748882612517565b975061257f8361252f565b925050600181019050612560565b5085935050505092915050565b600060208201905081810360008301526125b4818461253c565b905092915050565b6125c5816124fe565b81146125d057600080fd5b50565b6000813590506125e2816125bc565b92915050565b6000602082840312156125fe576125fd6122d0565b5b600061260c848285016125d3565b91505092915050565b61261e81612467565b82525050565b60006020820190506126396000830184612615565b92915050565b60008060408385031215612656576126556122d0565b5b600061266485828601612490565b9250506020612675858286016125d3565b9150509250929050565b612688816124fe565b82525050565b60006020820190506126a3600083018461267f565b92915050565b6000806000606084860312156126c2576126c16122d0565b5b60006126d086828701612490565b93505060206126e186828701612490565b92505060406126f2868287016125d3565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61273e826123db565b810181811067ffffffffffffffff8211171561275d5761275c612706565b5b80604052505050565b60006127706122c6565b905061277c8282612735565b919050565b600067ffffffffffffffff82111561279c5761279b612706565b5b6127a5826123db565b9050602081019050919050565b82818337600083830152505050565b60006127d46127cf84612781565b612766565b9050828152602081018484840111156127f0576127ef612701565b5b6127fb8482856127b2565b509392505050565b600082601f830112612818576128176126fc565b5b81356128288482602086016127c1565b91505092915050565b600060208284031215612847576128466122d0565b5b600082013567ffffffffffffffff811115612865576128646122d5565b5b61287184828501612803565b91505092915050565b6128838161235f565b811461288e57600080fd5b50565b6000813590506128a08161287a565b92915050565b600080604083850312156128bd576128bc6122d0565b5b60006128cb85828601612490565b92505060206128dc85828601612891565b9150509250929050565b600067ffffffffffffffff82111561290157612900612706565b5b61290a826123db565b9050602081019050919050565b600061292a612925846128e6565b612766565b90508281526020810184848401111561294657612945612701565b5b6129518482856127b2565b509392505050565b600082601f83011261296e5761296d6126fc565b5b813561297e848260208601612917565b91505092915050565b600080600080608085870312156129a1576129a06122d0565b5b60006129af87828801612490565b94505060206129c087828801612490565b93505060406129d1878288016125d3565b925050606085013567ffffffffffffffff8111156129f2576129f16122d5565b5b6129fe87828801612959565b91505092959194509250565b60008060408385031215612a2157612a206122d0565b5b6000612a2f85828601612490565b925050602083013567ffffffffffffffff811115612a5057612a4f6122d5565b5b612a5c85828601612803565b9150509250929050565b60008060408385031215612a7d57612a7c6122d0565b5b6000612a8b85828601612490565b9250506020612a9c85828601612490565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612aed57607f821691505b602082108103612b0057612aff612aa6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b6f826124fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ba157612ba0612b35565b5b600182019050919050565b6000606082019050612bc16000830186612615565b612bce602083018561267f565b612bdb6040830184612615565b949350505050565b6000604082019050612bf86000830185612615565b612c05602083018461267f565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612c6e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c31565b612c788683612c31565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612cb5612cb0612cab846124fe565b612c90565b6124fe565b9050919050565b6000819050919050565b612ccf83612c9a565b612ce3612cdb82612cbc565b848454612c3e565b825550505050565b600090565b612cf8612ceb565b612d03818484612cc6565b505050565b5b81811015612d2757612d1c600082612cf0565b600181019050612d09565b5050565b601f821115612d6c57612d3d81612c0c565b612d4684612c21565b81016020851015612d55578190505b612d69612d6185612c21565b830182612d08565b50505b505050565b600082821c905092915050565b6000612d8f60001984600802612d71565b1980831691505092915050565b6000612da88383612d7e565b9150826002028217905092915050565b612dc182612395565b67ffffffffffffffff811115612dda57612dd9612706565b5b612de48254612ad5565b612def828285612d2b565b600060209050601f831160018114612e225760008415612e10578287015190505b612e1a8582612d9c565b865550612e82565b601f198416612e3086612c0c565b60005b82811015612e5857848901518255600182019150602085019450602081019050612e33565b86831015612e755784890151612e71601f891682612d7e565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154612ea281612ad5565b612eac8186612e8a565b94506001821660008114612ec75760018114612edc57612f0f565b60ff1983168652811515820286019350612f0f565b612ee585612c0c565b60005b83811015612f0757815481890152600182019150602081019050612ee8565b838801955050505b50505092915050565b6000612f2382612395565b612f2d8185612e8a565b9350612f3d8185602086016123b1565b80840191505092915050565b6000612f558285612e95565b9150612f618284612f18565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612f9482612f6d565b612f9e8185612f78565b9350612fae8185602086016123b1565b612fb7816123db565b840191505092915050565b6000608082019050612fd76000830187612615565b612fe46020830186612615565b612ff1604083018561267f565b81810360608301526130038184612f89565b905095945050505050565b60008151905061301d81612306565b92915050565b600060208284031215613039576130386122d0565b5b60006130478482850161300e565b91505092915050565b600061305c8285612f18565b91506130688284612f18565b91508190509392505050565b600061307f826124fe565b915061308a836124fe565b92508282039050818111156130a2576130a1612b35565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220ac6eed5859495c388f089b12e3c7fc809fd5d16fe70700a10cac0fe02b34273664736f6c63430008140033";

type CardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Card__factory extends ContractFactory {
  constructor(...args: CardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialBaseURI: PromiseOrValue<string>,
    theOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Card> {
    return super.deploy(
      initialBaseURI,
      theOwner,
      overrides || {}
    ) as Promise<Card>;
  }
  override getDeployTransaction(
    initialBaseURI: PromiseOrValue<string>,
    theOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialBaseURI,
      theOwner,
      overrides || {}
    );
  }
  override attach(address: string): Card {
    return super.attach(address) as Card;
  }
  override connect(signer: Signer): Card__factory {
    return super.connect(signer) as Card__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardInterface {
    return new utils.Interface(_abi) as CardInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Card {
    return new Contract(address, _abi, signerOrProvider) as Card;
  }
}
